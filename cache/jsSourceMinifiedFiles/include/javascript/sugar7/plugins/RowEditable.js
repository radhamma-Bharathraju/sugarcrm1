(function(app){app.events.on('app:init',function(){app.plugins.register('RowEditable',['view'],{rowFields:{},toggledListModels:{},rowEditEvents:{'click [data-action=edit-list-row]':'_handleRowEditClicked','click [data-action=cancel-list-row]':'_handleRowCancelClicked','click [data-action=save-list-row]':'_handleRowSaveClicked','dblclick tr.single':'_handleRowDoubleClick',},_setRowFields:function(){this.rowFields={};_.each(this.fields,function(field){if(field.model&&field.model.cid&&_.isUndefined(field.parent)){this.rowFields[field.model.cid]=this.rowFields[field.model.cid]||[];this.rowFields[field.model.cid].push(field);}},this);},_toggleRow(row,isEdit){if(!row){return;}
let model=this.collection.get(row.data('id'));if(model&&app.acl.hasAccessToModel('edit',model)){row.toggleClass('tr-inline-edit',isEdit);if(isEdit){this.toggledListModels[model.id]=model;}else{delete this.toggledListModels[model.id];}
this.toggleFields(this.rowFields[model.cid],isEdit);}},_toggleRowsByModelId(ids,isEdit){_.each(ids,function(id){let row=this.$el.find(`tr[data-id=${id}]`);if(row.length){this._toggleRow(row,isEdit);}},this);},_isClickableElement:function(element){let tagNames=[element.tagName,element.parentElement.tagName].map(tag=>tag.toLowerCase());if(['a','button','input'].some(tag=>tagNames.includes(tag))){return true;}
if(element.classList.contains('focus-icon')){return true;}
return['data-action','data-clipboard','data-event'].some(attr=>{return element.getAttribute(attr)||element.parentElement.getAttribute(attr);});},_checkRowEditAccess:function(){if(!this.collection){return;}
_.each(this.collection.models,function(model){model.hasEditAccess=app.acl.hasAccessToModel('edit',model);},this);},_getClickedRowElement:function(event){return $(event.currentTarget).closest('tr');},_handleRowEditClicked:function(event){let row=this._getClickedRowElement(event);this._toggleRow(row,true);},_handleRowDoubleClick:function(event){if(!this._isClickableElement(event.target)){let row=this._getClickedRowElement(event);this._toggleRow(row,true);}},_handleRowCancelClicked:function(event){let row=this._getClickedRowElement(event);let model=this.collection.get(row.data('id'));if(model){model.revertAttributes();}
this._toggleRow(row,false);},hasUnsavedChanges:function(){let formFields=[];_.each(this.rowFields[_.first(_.keys(this.rowFields))],function(field){if(field.name){formFields.push(field.name);}
if(field.def.fields){formFields=_.chain(field.def.fields).pluck('name').compact().union(formFields).value();}},this);let hasUnsavedListTabChanges=_.some(_.values(this.toggledListModels),function(model){var changedAttributes=model.changedAttributes(model.getSynced());return!_.isEmpty(_.intersection(_.keys(changedAttributes),formFields));},this);const protoUnsavedChanges=()=>{const proto=Object.getPrototypeOf(this);return _.isFunction(proto.hasUnsavedChanges)?proto.hasUnsavedChanges.call(this):false;};return hasUnsavedListTabChanges||protoUnsavedChanges();},});});})(SUGAR.App);