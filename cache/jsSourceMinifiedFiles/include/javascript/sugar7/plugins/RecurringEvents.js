(function register(app){app.events.on('app:init',function init(){app.plugins.register('RecurringEvents',['view','field'],{isView:false,isField:false,recurringEventFields:['repeat_type','repeat_interval','repeat_dow','repeat_selector','repeat_days','repeat_ordinal','repeat_unit','repeat_end_type','repeat_until','repeat_count','recurrence',],onAttach:function(component,plugin){if(component instanceof app.view.Field){this.isField=true;this._fieldOnAttach(component);}else if(component instanceof app.view.View){this.isView=true;this._viewOnAttach(component);}},_fieldOnAttach:function(component){this.before('render',function(){if(this.name==='repeat_interval'){this.prepareRepeatIntervalValues();}
if(this.name==='repeat_ordinal'){this.prepareRepeatOrdinalValues();}});},_viewOnAttach:function(component){this.once('init',function(){this._setNoEditFields();},this);},prepareRepeatIntervalValues:function(){const repeatType=this.getRepeatIntervalKeyword();if(!repeatType||_.isEmpty(this.items)){return;}
_.each(this.items,function(value,key){let repeatIntervalValue=this.getRepeatIntervalString(key,repeatType);if(!repeatIntervalValue){return;}
this.items[key]=repeatIntervalValue;},this);},getRepeatIntervalKeyword:function(){const repeatType=this.model.get('repeat_type');if(!repeatType){return;}
switch(repeatType){case'Daily':return app.lang.get('LBL_CALENDAR_DAY');case'Weekly':return app.lang.get('LBL_CALENDAR_WEEK');case'Monthly':return app.lang.get('LBL_CALENDAR_MONTH');case'Yearly':return app.lang.get('LBL_CALENDAR_YEAR');default:return'';}},getRepeatIntervalString:function(key,keyword){if(!keyword){return;}
const firstValueKey='1';const interval=key===firstValueKey?'':app.lang.get(`LBL_CALENDAR_REPEAT_INTERVAL_VALUE_${key}`);return app.lang.get('TPL_REPEAT_INTERVAL',this.module,{repeatIntervalValue:interval,repeatTypeValue:keyword});},prepareRepeatOrdinalValues:function(){if(_.isEmpty(this.items)){return;}
if(this.action==='detail'){const repeatOrdinal=this.model.get('repeat_ordinal');if(repeatOrdinal){this.items[repeatOrdinal]=repeatOrdinal.charAt(0).toUpperCase()+repeatOrdinal.slice(1);}}else{const options=app.lang.getAppListStrings(this.def.options);if(options){this.items=this._filterOptions(options);}}},_setNoEditFields:function(){if(_.isUndefined(this.noEditFields)){this.noEditFields=[];}
_.each(this.recurringEventFields,function(field){this.noEditFields.push(field);},this);},_handleNoEventsGenerated:function(){this.model.revertAttributes();}});});})(SUGAR.App);